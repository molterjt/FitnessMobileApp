
type User @model{
    id: ID! @isUnique
    username: String! @isUnique
    firstName: String!
    lastName: String!
    password: String!
    email: String!
    dateOfBirth: String!
    phone: String
    imageUrl: String
    authenticated: Boolean @defaultValue(value: "false")
    classes: [GroupFitClass!]! @relation(name: "UsersClasses")
    workouts: [Workout!]! @relation(name: "UsersWorkouts")
    events: [Event!]! @relation(name: "UsersEvents")
    interests: [Interest!]! @relation(name: "UsersInterests")
    memberships: [MemberShip!]! @relation(name: "MembershipUsers")
    checkins: [Checkin!]! @relation(name: "UserCheckins")
    comments: [Comment!]! @relation(name: "UserComment")
    pictures: [Picture!]! @relation(name: "UsersPictures")
    advertisments: [MarketingAd!]! @relation(name: "UserMarketing")
}

type MarketingAd @model{
    id: ID! @isUnique
    adId: String @isUnique
    title: String!
    description: String
    imageUrl: String
    users: [User!]! @relation(name: "UserMarketing")
}

type Comment @model{
    id: ID! @isUnique
    commentId: String @isUnique
    content: String!
    date: DateTime
    userComment: User @relation(name: "UserComment")
    pictureComment: Picture @relation(name: "PictureComment")
    workoutComment: Workout @relation(name: "WorkoutComment")
    classComment: GroupFitClass @relation(name: "GroupFitClassComment")
    eventComment: Event @relation(name: "EventComment")
}

type Picture @model{
    id: ID! @isUnique
    picId: String @isUnique
    title: String!
    description: String
    imageUrl: String
    date: DateTime
    users: [User!]! @relation(name: "UsersPictures")
    comments: [Comment!]! @relation(name: "PictureComment")
    classes: GroupFitClass @relation(name: "GroupFitClassPictures")
    workouts: Workout @relation(name: "WorkoutPictures")
    facilities: Facility @relation(name: "FacilityPictures")
    events: Event @relation(name: "EventPictures")
}

type Checkin @model{
    id: ID! @isUnique
    checked: Boolean @defaultValue(value: "false")
    users: [User!]! @relation(name: "UserCheckins")
    workouts: [Workout!]! @relation(name: "WorkoutCheckins")
    classes: [GroupFitClass!]! @relation(name: "GroupFitClassCheckins")
    events: [Event!]! @relation(name: "EventCheckins")
    memberships: [Membership!]! @relation(name: "MembershipCheckins")
    facilities: [Facility!]! @relation(name: "FacilityCheckins")
}

type Membership @model{
    id: ID! @isUnique
    membershipId: String @isUnique
    title: String!
    category: [MembershipCategory!]! @relation(name: "CategoryMemberships")
    startDate: String
    endDate: String
    haveSessions: Boolean @defaultValue(value: "false")
    sessions: [Session!]! @relation(name: "")
    startBalance: Int
    currentBalance: Int
    users: [User!]! @relation(name: "MembershipUsers")
    checkins: [Checkins!]! @relation(name: "MembershipCheckins")
}

type Session @model{
    id: ID! @isUnique
    sessionId: String @isUnique
    sessionNum: Int
    date: String
    class: GroupFitClass @relation(name: "GroupFitClassSession")
    workout: Workout @relation(name: "WorkoutSession")
    checkin: Checkin @relation(name: "SessionCheckin")
    trainer: Trainer @relation(name: "TrainerSessions")
}

type MembershipCategory @model{
    id: ID! @isUnique
    title: String!
    description: String
    memberships: [Membership!]! @relation(name: "CategoryMemberships")
}

type Interest @model{
    id: ID! @isUnique
    interestId: String @isUnique
    title: String!
    description: String
    users: [User!]! @relation(name: "UsersInterests")
}

type WorkoutCategory @model{
    id: ID! @isUnique
    title: String!
    description: String
    imageUrl: String
    workouts: [Workout!]! @relation(name: "WorkoutCategories")
}

type Workout @model{
    id: ID! @isUnique
    workoutId: String @isUnique
    title: String!
    type: [WorkoutCategory!]! @relation(name: "WorkoutCategories")
    date: String
    days: [Day!]! @relation(name: "WorkoutDays")
    description: String
    exercises: [Exercise!]! @relation(name: "WorkoutExercises")
    author: Trainer @relation(name: "TrainerWorkouts")
    users: [User!]! @relation(name: "UsersWorkouts")
    imageUrl: String
    videoUrl: String
    pictures: [Picture!]! @relation(name: "WorkoutPictures")
    checkins: [Checkin!]! @relation(name: "WorkoutCheckins")
    comments: [Comment!]! @relation(name: "WorkoutComment")
    sessions: [Session!]! @relation(name: "WorkoutSession")
}

type Exercise @model{
    id: ID! @isUnique
    ExId: String @isUnique
    name: String!
    description: String
    sets: String
    reps: String
    intensity: String
    tempo: String
    restIntervals: String
    workouts: [Workout!]! @relation(name: "WorkoutExercises")
    imageUrl: String
    videoUrl: String
}

type Event @model{
    id: ID! @isUnique
    name: String!
    imageUrl: String
    videoUrl: String
    date: String
    time: String
    fees: String
    description: String
    discount: String
    location: Facility @relation(name: "EventLocations")
    days: [Day!]! @relation(name: "EventDays")
    users: [User!]! @relation(name: "UsersEvents")
    pictures: [Picture!]! @relation(name: "EventPictures")
    checkins: [Event!]! @relation(name: "EventCheckins")
    comments: [Comment!]! @relation(name: "EventComment")
}

type Day @model{
    id: ID! @isUnique
    name: String! @isUnique
    hours: String
    open: Boolean
    classes: [GroupFitClass!]! @relation(name: "ClassDays")
    events: [Event!]! @relation(name: "EventDays")
    workouts: [Workout!]! @relation(name: "WorkoutDays")
}

type Facility @model{
    id: ID! @isUnique
    facilityId: Int @isUnique
    facilityName: String!
    buildingName: String
    open: Boolean
    hours: String
    imageUrl: String
    videoUrl: String
    description: String
    classes: [GroupFitClass!]! @relation(name: "FacilityClasses")
    events: [Event!]! @relation(name: "EventLocations")
    checkins: [Checkin!]! @relation(name: "FacilityCheckins")
    pictures: [Picture!]! @relation(name: "FacilityPictures")
}

type GroupFitClass @model {
    id: ID! @isUnique
    classId: String! @isUnique
    title: String!
    time: String
    days: [Day!]! @relation(name: "ClassDays")
    location: Facility  @relation(name: "FacilityClasses")
    capacity: Int
    instructor: Instructor @relation(name: "InstructorsClasses")
    imageUrl: String
    videoUrl: String
    description: String
    users: [User!]! @relation(name: "UsersClasses")
    category: [GroupFitnessClassCategory!]! @relation(name: "GroupFitClassCat")
    pictures: [Pictures!]! @relation(name: "GroupFitClassPictures")
    checkins: [Checkin!]! @relation(name: "GroupFitClassCheckins")
    comments: [Comment!]! @relation(name: "GroupFitClassComment")
    sessions: [Session!]! @relation(name: "GroupFitClassSession")
}

type GroupFitnessClassCategory @model{
    id: ID! @isUnique
    categoryId: string @isUnique
    title: String!
    description: String
    classes: [GroupFitClass!]! @relation(name: "GroupFitClassCat")
    imageUrl: String
}

type Instructor @model {
    id: ID! @isUnique
    instructorId: String! @isUnique
    firstName: String!
    lastName: String!
    email: String!
    classes: [GroupFitClass!]! @relation(name: "InstructorsClasses")
    imageUrl: String
    videoUrl: String
    description: String
}

type Trainer @model{
    id: ID! @isUnique
    trainerID: String! @isUnique
    firstName: String!
    lastName: String!
    email: String!
    imageUrl: String
    videoUrl: String
    description: String
    workouts: [Workout!]! @relation(name: "TrainerWorkouts")
    sessions: [Session!]! @relation(name: "TrainerSessions")
}

